var path = require('path'),
dir = path.join('/', path.join(path.dirname(__filename), '/'));

var bombs = [],
players = require('players'),
utils = require('utils'),
nowjs = require('now'),
OGE = require(dir + '../shared/js/oge'),
_ = require(dir + '../shared/js/underscore-min');

var bombTimer = function() {
    bombs.forEach(function(bomb) {
        if (--bomb.timer === 0) {
            bomb.game.removeBody(bomb);
            bomb.player.bombs++;
            nowjs.getGroup(bomb.game.guid).now.explodeBomb(bomb.guid);
            bombs = _.without(bombs, bomb);
        }
    });
};

setInterval(bombTimer, 800);



exports.startEndMove = function(direction, x, y) {
    var player = players.getPlayer(this);
    player.direction = direction !== null ? OGE.Direction.deserialize(direction) : null;
    player.x = x;
    player.y = y;
    nowjs.getGroup(player.game.guid).now.move(player.publicGuid, player.direction, x, y);
};

exports.placeBomb = function() {
    var player = players.getPlayer(this);
    if (!player.dead) {
        if (player.bombs > 0) {
            player.bombs--;
            var bomb = new Bomb(Math.floor((player.x + 8) / 16) * 16, Math.floor((player.y + 8) / 16) * 16, 16, 16);
            bomb.guid = utils.guid(5);
            bomb.size = 2;
            bomb.game = player.game;
            bomb.power = player.power;
            bomb.player = player;
            player.game.addBody(bomb);
            bombs.push(bomb);
            nowjs.getGroup(player.game.guid).now.addBomb(bomb.serialize());
        }
    }
};

exports.init = function() {
    setInterval(bombTimer, 1000);
};

